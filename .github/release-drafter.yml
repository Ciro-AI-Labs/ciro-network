name-template: "v$NEXT_PATCH_VERSION"
tag-template: "v$NEXT_PATCH_VERSION"
prerelease: false

# Categorize pull requests into sections in the release notes
categories:
  - title: "🚀 Features"
    labels:
      - "feature"
      - "enhancement"
  - title: "🐛 Bug Fixes"
    labels:
      - "bug"
      - "fix"
  - title: "🔧 Improvements"
    labels:
      - "improvement"
      - "refactor"
  - title: "📝 Documentation"
    labels:
      - "documentation"
      - "docs"
  - title: "🛡️ Security"
    labels:
      - "security"
  - title: "⚡ Performance"
    labels:
      - "performance"
  - title: "🧪 Testing"
    labels:
      - "test"
      - "testing"
  - title: "🔧 Maintenance"
    labels:
      - "chore"
      - "maintenance"
      - "ci"

# Template for the release notes
template: |
  ## What's Changed in CIRO Network

  $CHANGES

  **Full Changelog**: https://github.com/$OWNER/$REPOSITORY/compare/$PREVIOUS_TAG...v$NEXT_PATCH_VERSION

  ## Contract Addresses
  All contracts are deployed on Starknet Sepolia testnet. For production use, please verify contract addresses independently.

# What to do with PRs that don't match a category
change-template: "* $TITLE (#$NUMBER) @$AUTHOR"
no-changes-template: "* No user-facing changes in this release"

# Automatically detect version based on labels
version-resolver:
  major:
    labels:
      - "major"
      - "breaking"
  minor:
    labels:
      - "minor"
      - "feature"
  patch:
    labels:
      - "patch"
      - "bug"
      - "fix"
  default: patch

# Exclude certain labels from appearing in release notes
exclude-labels:
  - "skip-changelog"
  - "ignore"
  - "duplicate"
  - "invalid"
  - "wontfix"

# Automatically include certain contributors
include-pre-releases: false
sort-direction: ascending
