"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/manifesto/page",{

/***/ "(app-pages-browser)/./src/components/MermaidDiagram.tsx":
/*!*******************************************!*\
  !*** ./src/components/MermaidDiagram.tsx ***!
  \*******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\nconst MermaidDiagram = (param)=>{\n    let { chart, className = \"\" } = param;\n    _s();\n    const elementRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [diagram, setDiagram] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        let mounted = true;\n        const renderDiagram = async ()=>{\n            try {\n                setIsLoading(true);\n                setError(\"\");\n                // Dynamic import to avoid SSR issues\n                const mermaid = (await __webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_mermaid_dist_mermaid_core_mjs\").then(__webpack_require__.bind(__webpack_require__, /*! mermaid */ \"(app-pages-browser)/./node_modules/mermaid/dist/mermaid.core.mjs\"))).default;\n                // Initialize mermaid only once\n                mermaid.initialize({\n                    startOnLoad: false,\n                    theme: \"dark\",\n                    themeVariables: {\n                        primaryColor: \"#00d4ff\",\n                        primaryTextColor: \"#ffffff\",\n                        primaryBorderColor: \"#00d4ff\",\n                        lineColor: \"#6b7280\",\n                        secondaryColor: \"#1f2937\",\n                        tertiaryColor: \"#374151\",\n                        background: \"#111827\",\n                        mainBkg: \"#1f2937\",\n                        secondBkg: \"#374151\",\n                        tertiaryBkg: \"#4b5563\",\n                        darkMode: true\n                    },\n                    flowchart: {\n                        useMaxWidth: true,\n                        htmlLabels: true,\n                        curve: \"basis\"\n                    },\n                    securityLevel: \"loose\"\n                });\n                // Generate unique ID for the diagram\n                const id = \"mermaid-\".concat(Date.now(), \"-\").concat(Math.random().toString(36).substr(2, 9));\n                // Validate the chart syntax first\n                const isValid = await mermaid.parse(chart);\n                if (!isValid) {\n                    throw new Error(\"Invalid Mermaid syntax\");\n                }\n                // Render the diagram to SVG string\n                const { svg } = await mermaid.render(id, chart);\n                // Only update state if component is still mounted\n                if (mounted) {\n                    setDiagram(svg);\n                    setIsLoading(false);\n                }\n            } catch (err) {\n                console.error(\"Mermaid rendering error:\", err);\n                if (mounted) {\n                    setError(err instanceof Error ? err.message : \"Failed to render diagram\");\n                    setDiagram(\"\");\n                    setIsLoading(false);\n                }\n            }\n        };\n        renderDiagram();\n        // Cleanup function\n        return ()=>{\n            mounted = false;\n        };\n    }, [\n        chart\n    ]);\n    if (isLoading) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"flex items-center justify-center h-48 text-gray-400 \".concat(className),\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"animate-spin rounded-full h-8 w-8 border-b-2 border-cosmic-cyan\"\n                }, void 0, false, {\n                    fileName: \"/Users/vaamx/cironetwork/ciro-network/src/components/MermaidDiagram.tsx\",\n                    lineNumber: 92,\n                    columnNumber: 9\n                }, undefined),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                    className: \"ml-2\",\n                    children: \"Loading diagram...\"\n                }, void 0, false, {\n                    fileName: \"/Users/vaamx/cironetwork/ciro-network/src/components/MermaidDiagram.tsx\",\n                    lineNumber: 93,\n                    columnNumber: 9\n                }, undefined)\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/vaamx/cironetwork/ciro-network/src/components/MermaidDiagram.tsx\",\n            lineNumber: 91,\n            columnNumber: 7\n        }, undefined);\n    }\n    if (error) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"bg-gray-900 rounded-lg p-4 \".concat(className),\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"text-red-400 text-sm mb-2\",\n                    children: [\n                        \"Diagram Error: \",\n                        error\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/vaamx/cironetwork/ciro-network/src/components/MermaidDiagram.tsx\",\n                    lineNumber: 101,\n                    columnNumber: 9\n                }, undefined),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"pre\", {\n                    className: \"text-cosmic-cyan text-xs overflow-x-auto bg-black/50 p-3 rounded\",\n                    children: chart\n                }, void 0, false, {\n                    fileName: \"/Users/vaamx/cironetwork/ciro-network/src/components/MermaidDiagram.tsx\",\n                    lineNumber: 102,\n                    columnNumber: 9\n                }, undefined)\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/vaamx/cironetwork/ciro-network/src/components/MermaidDiagram.tsx\",\n            lineNumber: 100,\n            columnNumber: 7\n        }, undefined);\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: elementRef,\n        className: \"mermaid-container overflow-x-auto \".concat(className),\n        dangerouslySetInnerHTML: {\n            __html: diagram\n        },\n        style: {\n            minHeight: \"200px\"\n        }\n    }, void 0, false, {\n        fileName: \"/Users/vaamx/cironetwork/ciro-network/src/components/MermaidDiagram.tsx\",\n        lineNumber: 110,\n        columnNumber: 5\n    }, undefined);\n};\n_s(MermaidDiagram, \"dxWQO/Yu5GZU/CbjM1yyKFQjgAk=\");\n_c = MermaidDiagram;\n/* harmony default export */ __webpack_exports__[\"default\"] = (MermaidDiagram);\nvar _c;\n$RefreshReg$(_c, \"MermaidDiagram\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/MermaidDiagram.tsx\n"));

/***/ })

});