"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/manifesto/page",{

/***/ "(app-pages-browser)/./src/components/MermaidDiagram.tsx":
/*!*******************************************!*\
  !*** ./src/components/MermaidDiagram.tsx ***!
  \*******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\nconst MermaidDiagram = (param)=>{\n    let { chart, className = \"\" } = param;\n    _s();\n    const elementRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [isLoaded, setIsLoaded] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const loadMermaid = async ()=>{\n            try {\n                // Dynamic import to avoid SSR issues\n                const mermaid = (await __webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_mermaid_dist_mermaid_core_mjs\").then(__webpack_require__.bind(__webpack_require__, /*! mermaid */ \"(app-pages-browser)/./node_modules/mermaid/dist/mermaid.core.mjs\"))).default;\n                // Initialize mermaid with proper configuration\n                mermaid.initialize({\n                    startOnLoad: false,\n                    theme: \"dark\",\n                    themeVariables: {\n                        primaryColor: \"#00d4ff\",\n                        primaryTextColor: \"#ffffff\",\n                        primaryBorderColor: \"#00d4ff\",\n                        lineColor: \"#6b7280\",\n                        secondaryColor: \"#1f2937\",\n                        tertiaryColor: \"#374151\",\n                        background: \"#111827\",\n                        mainBkg: \"#1f2937\",\n                        secondBkg: \"#374151\",\n                        tertiaryBkg: \"#4b5563\",\n                        darkMode: true\n                    },\n                    flowchart: {\n                        useMaxWidth: true,\n                        htmlLabels: true,\n                        curve: \"basis\"\n                    }\n                });\n                setIsLoaded(true);\n                // Render the diagram\n                if (elementRef.current) {\n                    const element = elementRef.current;\n                    // Clear previous content\n                    element.innerHTML = \"\";\n                    // Generate unique ID for the diagram\n                    const id = \"mermaid-\".concat(Math.random().toString(36).substr(2, 9));\n                    try {\n                        const { svg } = await mermaid.render(id, chart);\n                        element.innerHTML = svg;\n                    } catch (error) {\n                        console.error(\"Mermaid rendering error:\", error);\n                        element.innerHTML = '<pre class=\"text-cosmic-cyan text-xs overflow-x-auto\">'.concat(chart, \"</pre>\");\n                    }\n                }\n            } catch (error) {\n                console.error(\"Failed to load mermaid:\", error);\n                // Fallback to showing the raw chart\n                if (elementRef.current) {\n                    elementRef.current.innerHTML = '<pre class=\"text-cosmic-cyan text-xs overflow-x-auto\">'.concat(chart, \"</pre>\");\n                }\n            }\n        };\n        loadMermaid();\n    }, [\n        chart\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: elementRef,\n        className: \"mermaid-container overflow-x-auto \".concat(className),\n        style: {\n            minHeight: \"200px\"\n        },\n        children: !isLoaded && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"flex items-center justify-center h-48 text-gray-400\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"animate-spin rounded-full h-8 w-8 border-b-2 border-cosmic-cyan\"\n                }, void 0, false, {\n                    fileName: \"/Users/vaamx/cironetwork/ciro-network/src/components/MermaidDiagram.tsx\",\n                    lineNumber: 83,\n                    columnNumber: 11\n                }, undefined),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                    className: \"ml-2\",\n                    children: \"Loading diagram...\"\n                }, void 0, false, {\n                    fileName: \"/Users/vaamx/cironetwork/ciro-network/src/components/MermaidDiagram.tsx\",\n                    lineNumber: 84,\n                    columnNumber: 11\n                }, undefined)\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/vaamx/cironetwork/ciro-network/src/components/MermaidDiagram.tsx\",\n            lineNumber: 82,\n            columnNumber: 9\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"/Users/vaamx/cironetwork/ciro-network/src/components/MermaidDiagram.tsx\",\n        lineNumber: 76,\n        columnNumber: 5\n    }, undefined);\n};\n_s(MermaidDiagram, \"HBEH5XaebPin6Rab67oVo63Dvdk=\");\n_c = MermaidDiagram;\n/* harmony default export */ __webpack_exports__[\"default\"] = (MermaidDiagram);\nvar _c;\n$RefreshReg$(_c, \"MermaidDiagram\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL01lcm1haWREaWFncmFtLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFFMkQ7QUFPM0QsTUFBTUksaUJBQWdEO1FBQUMsRUFBRUMsS0FBSyxFQUFFQyxZQUFZLEVBQUUsRUFBRTs7SUFDOUUsTUFBTUMsYUFBYUwsNkNBQU1BLENBQWlCO0lBQzFDLE1BQU0sQ0FBQ00sVUFBVUMsWUFBWSxHQUFHTiwrQ0FBUUEsQ0FBQztJQUV6Q0YsZ0RBQVNBLENBQUM7UUFDUixNQUFNUyxjQUFjO1lBQ2xCLElBQUk7Z0JBQ0YscUNBQXFDO2dCQUNyQyxNQUFNQyxVQUFVLENBQUMsTUFBTSw2T0FBZ0IsRUFBR0MsT0FBTztnQkFFakQsK0NBQStDO2dCQUMvQ0QsUUFBUUUsVUFBVSxDQUFDO29CQUNqQkMsYUFBYTtvQkFDYkMsT0FBTztvQkFDUEMsZ0JBQWdCO3dCQUNkQyxjQUFjO3dCQUNkQyxrQkFBa0I7d0JBQ2xCQyxvQkFBb0I7d0JBQ3BCQyxXQUFXO3dCQUNYQyxnQkFBZ0I7d0JBQ2hCQyxlQUFlO3dCQUNmQyxZQUFZO3dCQUNaQyxTQUFTO3dCQUNUQyxXQUFXO3dCQUNYQyxhQUFhO3dCQUNiQyxVQUFVO29CQUNaO29CQUNBQyxXQUFXO3dCQUNUQyxhQUFhO3dCQUNiQyxZQUFZO3dCQUNaQyxPQUFPO29CQUNUO2dCQUNGO2dCQUVBdEIsWUFBWTtnQkFFWixxQkFBcUI7Z0JBQ3JCLElBQUlGLFdBQVd5QixPQUFPLEVBQUU7b0JBQ3RCLE1BQU1DLFVBQVUxQixXQUFXeUIsT0FBTztvQkFDbEMseUJBQXlCO29CQUN6QkMsUUFBUUMsU0FBUyxHQUFHO29CQUVwQixxQ0FBcUM7b0JBQ3JDLE1BQU1DLEtBQUssV0FBbUQsT0FBeENDLEtBQUtDLE1BQU0sR0FBR0MsUUFBUSxDQUFDLElBQUlDLE1BQU0sQ0FBQyxHQUFHO29CQUUzRCxJQUFJO3dCQUNGLE1BQU0sRUFBRUMsR0FBRyxFQUFFLEdBQUcsTUFBTTdCLFFBQVE4QixNQUFNLENBQUNOLElBQUk5Qjt3QkFDekM0QixRQUFRQyxTQUFTLEdBQUdNO29CQUN0QixFQUFFLE9BQU9FLE9BQU87d0JBQ2RDLFFBQVFELEtBQUssQ0FBQyw0QkFBNEJBO3dCQUMxQ1QsUUFBUUMsU0FBUyxHQUFHLHlEQUErRCxPQUFON0IsT0FBTTtvQkFDckY7Z0JBQ0Y7WUFDRixFQUFFLE9BQU9xQyxPQUFPO2dCQUNkQyxRQUFRRCxLQUFLLENBQUMsMkJBQTJCQTtnQkFDekMsb0NBQW9DO2dCQUNwQyxJQUFJbkMsV0FBV3lCLE9BQU8sRUFBRTtvQkFDdEJ6QixXQUFXeUIsT0FBTyxDQUFDRSxTQUFTLEdBQUcseURBQStELE9BQU43QixPQUFNO2dCQUNoRztZQUNGO1FBQ0Y7UUFFQUs7SUFDRixHQUFHO1FBQUNMO0tBQU07SUFFVixxQkFDRSw4REFBQ3VDO1FBQ0NDLEtBQUt0QztRQUNMRCxXQUFXLHFDQUErQyxPQUFWQTtRQUNoRHdDLE9BQU87WUFBRUMsV0FBVztRQUFRO2tCQUUzQixDQUFDdkMsMEJBQ0EsOERBQUNvQztZQUFJdEMsV0FBVTs7OEJBQ2IsOERBQUNzQztvQkFBSXRDLFdBQVU7Ozs7Ozs4QkFDZiw4REFBQzBDO29CQUFLMUMsV0FBVTs4QkFBTzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFLakM7R0EvRU1GO0tBQUFBO0FBaUZOLCtEQUFlQSxjQUFjQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9jb21wb25lbnRzL01lcm1haWREaWFncmFtLnRzeD9jOWU4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgY2xpZW50JztcblxuaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCwgdXNlUmVmLCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcblxuaW50ZXJmYWNlIE1lcm1haWREaWFncmFtUHJvcHMge1xuICBjaGFydDogc3RyaW5nO1xuICBjbGFzc05hbWU/OiBzdHJpbmc7XG59XG5cbmNvbnN0IE1lcm1haWREaWFncmFtOiBSZWFjdC5GQzxNZXJtYWlkRGlhZ3JhbVByb3BzPiA9ICh7IGNoYXJ0LCBjbGFzc05hbWUgPSAnJyB9KSA9PiB7XG4gIGNvbnN0IGVsZW1lbnRSZWYgPSB1c2VSZWY8SFRNTERpdkVsZW1lbnQ+KG51bGwpO1xuICBjb25zdCBbaXNMb2FkZWQsIHNldElzTG9hZGVkXSA9IHVzZVN0YXRlKGZhbHNlKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IGxvYWRNZXJtYWlkID0gYXN5bmMgKCkgPT4ge1xuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gRHluYW1pYyBpbXBvcnQgdG8gYXZvaWQgU1NSIGlzc3Vlc1xuICAgICAgICBjb25zdCBtZXJtYWlkID0gKGF3YWl0IGltcG9ydCgnbWVybWFpZCcpKS5kZWZhdWx0O1xuICAgICAgICBcbiAgICAgICAgLy8gSW5pdGlhbGl6ZSBtZXJtYWlkIHdpdGggcHJvcGVyIGNvbmZpZ3VyYXRpb25cbiAgICAgICAgbWVybWFpZC5pbml0aWFsaXplKHtcbiAgICAgICAgICBzdGFydE9uTG9hZDogZmFsc2UsXG4gICAgICAgICAgdGhlbWU6ICdkYXJrJyxcbiAgICAgICAgICB0aGVtZVZhcmlhYmxlczoge1xuICAgICAgICAgICAgcHJpbWFyeUNvbG9yOiAnIzAwZDRmZicsXG4gICAgICAgICAgICBwcmltYXJ5VGV4dENvbG9yOiAnI2ZmZmZmZicsXG4gICAgICAgICAgICBwcmltYXJ5Qm9yZGVyQ29sb3I6ICcjMDBkNGZmJyxcbiAgICAgICAgICAgIGxpbmVDb2xvcjogJyM2YjcyODAnLFxuICAgICAgICAgICAgc2Vjb25kYXJ5Q29sb3I6ICcjMWYyOTM3JyxcbiAgICAgICAgICAgIHRlcnRpYXJ5Q29sb3I6ICcjMzc0MTUxJyxcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICcjMTExODI3JyxcbiAgICAgICAgICAgIG1haW5Ca2c6ICcjMWYyOTM3JyxcbiAgICAgICAgICAgIHNlY29uZEJrZzogJyMzNzQxNTEnLFxuICAgICAgICAgICAgdGVydGlhcnlCa2c6ICcjNGI1NTYzJyxcbiAgICAgICAgICAgIGRhcmtNb2RlOiB0cnVlLFxuICAgICAgICAgIH0sXG4gICAgICAgICAgZmxvd2NoYXJ0OiB7XG4gICAgICAgICAgICB1c2VNYXhXaWR0aDogdHJ1ZSxcbiAgICAgICAgICAgIGh0bWxMYWJlbHM6IHRydWUsXG4gICAgICAgICAgICBjdXJ2ZTogJ2Jhc2lzJyxcbiAgICAgICAgICB9LFxuICAgICAgICB9KTtcblxuICAgICAgICBzZXRJc0xvYWRlZCh0cnVlKTtcblxuICAgICAgICAvLyBSZW5kZXIgdGhlIGRpYWdyYW1cbiAgICAgICAgaWYgKGVsZW1lbnRSZWYuY3VycmVudCkge1xuICAgICAgICAgIGNvbnN0IGVsZW1lbnQgPSBlbGVtZW50UmVmLmN1cnJlbnQ7XG4gICAgICAgICAgLy8gQ2xlYXIgcHJldmlvdXMgY29udGVudFxuICAgICAgICAgIGVsZW1lbnQuaW5uZXJIVE1MID0gJyc7XG4gICAgICAgICAgXG4gICAgICAgICAgLy8gR2VuZXJhdGUgdW5pcXVlIElEIGZvciB0aGUgZGlhZ3JhbVxuICAgICAgICAgIGNvbnN0IGlkID0gYG1lcm1haWQtJHtNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMiwgOSl9YDtcbiAgICAgICAgICBcbiAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgeyBzdmcgfSA9IGF3YWl0IG1lcm1haWQucmVuZGVyKGlkLCBjaGFydCk7XG4gICAgICAgICAgICBlbGVtZW50LmlubmVySFRNTCA9IHN2ZztcbiAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcignTWVybWFpZCByZW5kZXJpbmcgZXJyb3I6JywgZXJyb3IpO1xuICAgICAgICAgICAgZWxlbWVudC5pbm5lckhUTUwgPSBgPHByZSBjbGFzcz1cInRleHQtY29zbWljLWN5YW4gdGV4dC14cyBvdmVyZmxvdy14LWF1dG9cIj4ke2NoYXJ0fTwvcHJlPmA7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBjb25zb2xlLmVycm9yKCdGYWlsZWQgdG8gbG9hZCBtZXJtYWlkOicsIGVycm9yKTtcbiAgICAgICAgLy8gRmFsbGJhY2sgdG8gc2hvd2luZyB0aGUgcmF3IGNoYXJ0XG4gICAgICAgIGlmIChlbGVtZW50UmVmLmN1cnJlbnQpIHtcbiAgICAgICAgICBlbGVtZW50UmVmLmN1cnJlbnQuaW5uZXJIVE1MID0gYDxwcmUgY2xhc3M9XCJ0ZXh0LWNvc21pYy1jeWFuIHRleHQteHMgb3ZlcmZsb3cteC1hdXRvXCI+JHtjaGFydH08L3ByZT5gO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfTtcblxuICAgIGxvYWRNZXJtYWlkKCk7XG4gIH0sIFtjaGFydF0pO1xuXG4gIHJldHVybiAoXG4gICAgPGRpdiBcbiAgICAgIHJlZj17ZWxlbWVudFJlZn0gXG4gICAgICBjbGFzc05hbWU9e2BtZXJtYWlkLWNvbnRhaW5lciBvdmVyZmxvdy14LWF1dG8gJHtjbGFzc05hbWV9YH1cbiAgICAgIHN0eWxlPXt7IG1pbkhlaWdodDogJzIwMHB4JyB9fVxuICAgID5cbiAgICAgIHshaXNMb2FkZWQgJiYgKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIGgtNDggdGV4dC1ncmF5LTQwMFwiPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYW5pbWF0ZS1zcGluIHJvdW5kZWQtZnVsbCBoLTggdy04IGJvcmRlci1iLTIgYm9yZGVyLWNvc21pYy1jeWFuXCI+PC9kaXY+XG4gICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwibWwtMlwiPkxvYWRpbmcgZGlhZ3JhbS4uLjwvc3Bhbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICApfVxuICAgIDwvZGl2PlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgTWVybWFpZERpYWdyYW07ICJdLCJuYW1lcyI6WyJSZWFjdCIsInVzZUVmZmVjdCIsInVzZVJlZiIsInVzZVN0YXRlIiwiTWVybWFpZERpYWdyYW0iLCJjaGFydCIsImNsYXNzTmFtZSIsImVsZW1lbnRSZWYiLCJpc0xvYWRlZCIsInNldElzTG9hZGVkIiwibG9hZE1lcm1haWQiLCJtZXJtYWlkIiwiZGVmYXVsdCIsImluaXRpYWxpemUiLCJzdGFydE9uTG9hZCIsInRoZW1lIiwidGhlbWVWYXJpYWJsZXMiLCJwcmltYXJ5Q29sb3IiLCJwcmltYXJ5VGV4dENvbG9yIiwicHJpbWFyeUJvcmRlckNvbG9yIiwibGluZUNvbG9yIiwic2Vjb25kYXJ5Q29sb3IiLCJ0ZXJ0aWFyeUNvbG9yIiwiYmFja2dyb3VuZCIsIm1haW5Ca2ciLCJzZWNvbmRCa2ciLCJ0ZXJ0aWFyeUJrZyIsImRhcmtNb2RlIiwiZmxvd2NoYXJ0IiwidXNlTWF4V2lkdGgiLCJodG1sTGFiZWxzIiwiY3VydmUiLCJjdXJyZW50IiwiZWxlbWVudCIsImlubmVySFRNTCIsImlkIiwiTWF0aCIsInJhbmRvbSIsInRvU3RyaW5nIiwic3Vic3RyIiwic3ZnIiwicmVuZGVyIiwiZXJyb3IiLCJjb25zb2xlIiwiZGl2IiwicmVmIiwic3R5bGUiLCJtaW5IZWlnaHQiLCJzcGFuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/MermaidDiagram.tsx\n"));

/***/ })

});